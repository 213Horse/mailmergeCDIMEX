name: Deploy to VPS (Docker)
on:
  push:
    branches: [main, master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
      PROD_ENV_FILE: ${{ secrets.PROD_ENV_FILE }}
      DOMAIN: ${{ secrets.DOMAIN }}
      HOST_PORT: ${{ secrets.HOST_PORT }}
      CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set image tags
        id: meta
        run: |
          set -e
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE_LC=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9._-]+/-/g')
          REPO_PATH=${REGISTRY}/${OWNER_LC}/${IMAGE_LC}
          echo "repo_path=${REPO_PATH}" >> "$GITHUB_OUTPUT"
          echo "tag_sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          echo "tag_latest=latest" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        run: |
          set -e
          docker build -t "${{ steps.meta.outputs.repo_path }}:${{ steps.meta.outputs.tag_sha }}" \
                       -t "${{ steps.meta.outputs.repo_path }}:${{ steps.meta.outputs.tag_latest }}" .
          docker push "${{ steps.meta.outputs.repo_path }}:${{ steps.meta.outputs.tag_sha }}"
          docker push "${{ steps.meta.outputs.repo_path }}:${{ steps.meta.outputs.tag_latest }}"

      - name: Prepare SSH key
        run: |
          set -e
          printf "%s" "${VPS_SSH_KEY}" > vps_key
          chmod 600 vps_key

      - name: Deploy on VPS over SSH (run repo script)
        env:
          REPO_PATH: ${{ steps.meta.outputs.repo_path }}
          TAG_SHA: ${{ steps.meta.outputs.tag_sha }}
        run: |
          set -e
          # Copy deploy script to server
          scp -i vps_key -o StrictHostKeyChecking=no .github/scripts/deploy.sh "${VPS_USER}@${VPS_HOST}:/tmp/deploy.sh"
          # Run script with needed env vars
          ssh -i vps_key -o StrictHostKeyChecking=no "${VPS_USER}@${VPS_HOST}" \
            IMAGE_NAME="${IMAGE_NAME}" \
            REPO_PATH="${REPO_PATH}" \
            TAG_SHA="${TAG_SHA}" \
            HOST_PORT="${HOST_PORT}" \
            CONTAINER_PORT="${CONTAINER_PORT}" \
            DOMAIN="${DOMAIN}" \
            GHCR_USERNAME="${GHCR_USERNAME}" \
            GHCR_TOKEN="${GHCR_TOKEN}" \
            PROD_ENV_FILE="${PROD_ENV_FILE}" \
            bash /tmp/deploy.sh

      - name: Cleanup
        if: always()
        run: rm -f vps_key
